{"version":3,"sources":["components/Filter.js","components/Form.js","components/Person.js","components/People.js","components/Notification.js","services/phonebook.js","App.js","serviceWorker.js","index.js"],"names":["Filter","_ref","value","onChange","react_default","a","createElement","Form","handleSubmit","nameValue","onNameChange","numberValue","onNumberChange","onSubmit","type","Person","person","deletePerson","name","number","onClick","id","People","people","map","components_Person","key","Notification","notification","message","className","concat","baseUrl","phonebook","axios","get","then","response","data","newObject","post","put","delete","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","filterValue","setFilter","_useState9","_useState10","notificaion","setNotification","triggerNotification","setTimeout","useEffect","phonebookService","personsToShow","filter","toLowerCase","includes","components_Notification","components_Filter","event","target","components_Form","preventDefault","newPerson","find","personExists","window","confirm","newPersons","updatePerson","components_People","catch","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14c717a9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\r\n  return (\r\n    <div>\r\n      <span>Filter shown with</span>\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Form = ({\r\n  handleSubmit,\r\n  nameValue,\r\n  onNameChange,\r\n  numberValue,\r\n  onNumberChange\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Add a new person</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name:\r\n          <input\r\n            value={nameValue}\r\n            onChange={onNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number:\r\n          <input\r\n            value={numberValue}\r\n            onChange={onNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Person = ({ person, deletePerson }) => (\r\n  <p>\r\n    <span>{person.name} </span>\r\n    <span>{person.number} </span>\r\n    <button\r\n      onClick={deletePerson}\r\n      value={person.id}\r\n    >Delete</button>\r\n    </p>\r\n)\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst People = ({people, deletePerson}) => {\r\n\r\n  const listPeople = () => {\r\n    return people.map( person =>\r\n      <Person\r\n        key={person.name}\r\n        person={person}\r\n        deletePerson={deletePerson}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      {listPeople()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default People\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n\r\n  if (notification.message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={`notificaion ${notification.type}`}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAllPersons = () => {\r\n  return axios\r\n    .get(baseUrl)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst createPerson = newObject => {\r\n  return axios\r\n    .post(baseUrl, newObject)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, newObject) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, newObject)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios\r\n    .delete(`${baseUrl}/${id}`)\r\n    .then(response => response.data)\r\n}\r\n\r\nexport default { getAllPersons, createPerson, updatePerson, deletePerson }\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport Filter from './components/Filter'\r\nimport Form from './components/Form'\r\nimport People from './components/People'\r\nimport Notification from './components/Notification'\r\n\r\nimport phonebookService from './services/phonebook'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterValue, setFilter ] = useState('')\r\n  const [ notificaion, setNotification ] = useState({\r\n    message: null,\r\n    type: null\r\n  })\r\n\r\n  const triggerNotification = (message, type) => {\r\n    const notification = {\r\n      message,\r\n      type\r\n    }\r\n    setNotification(notification)\r\n    setTimeout(() => {setNotification({message: null, type: null})}, 5000)\r\n  }\r\n\r\n  const getPersonsHook = () => {\r\n    phonebookService.getAllPersons()\r\n      .then( persons => setPersons(persons) )\r\n  }\r\n  useEffect(getPersonsHook, [])\r\n\r\n  const addPerson = (person) => {\r\n    phonebookService.createPerson(person)\r\n      .then( newPerson => {\r\n        setPersons(persons.concat(newPerson))\r\n        triggerNotification(`Added ${newPerson.name}`, 'success')\r\n      })\r\n  }\r\n\r\n  const deletePerson = (event) => {\r\n    const id = event.target.value\r\n    const person = persons.find( person => person.id === id)\r\n\r\n    if ( !window.confirm(`Delete ${person.name}?`) ) {\r\n      return\r\n    }\r\n\r\n    phonebookService.deletePerson(id)\r\n      .then( () => {\r\n        setPersons(persons.filter( person => person.id !== id))\r\n        triggerNotification(`Successfully deleted ${person.name}`, 'error')\r\n      })\r\n      .catch( () => {\r\n        triggerNotification(`'${person.name}' was already deleted from server`, 'error')\r\n        setPersons(persons.filter( person => person.id !== id))\r\n      })\r\n  }\r\n\r\n  const updatePerson = (id, newPerson) => {\r\n    phonebookService\r\n      .updatePerson(id, newPerson)\r\n      .then(newPerson => {\r\n        const newPersons = persons.map( person => person.id === id ? newPerson : person)\r\n        setPersons(newPersons)\r\n        triggerNotification(`Updated ${newPerson.name}`, 'success')\r\n      })\r\n  }\r\n\r\n  const handleNewNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNewNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const personExists = (newPerson) => {\r\n    return !!persons.find( person => person.name === newPerson.name )\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if ( !personExists(newPerson) ) {\r\n      addPerson(newPerson)\r\n    }\r\n    else if (window.confirm(`${newPerson.name} is already added to the phonebook, replace the old number with a new one?`)) {\r\n        const { id } = persons.find( person => person.name === newPerson.name )\r\n        updatePerson(id, newPerson)\r\n    }\r\n    else {\r\n      return\r\n    }\r\n\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const personsToShow = persons.filter( person => person.name.toLowerCase().includes(filterValue) );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification\r\n        notification={notificaion}\r\n      />\r\n\r\n      <Filter\r\n        onChange={handleFilterChange}\r\n        value={filterValue}\r\n      />\r\n\r\n      <Form\r\n        handleSubmit={handleSubmit}\r\n        nameValue={newName}\r\n        onNameChange={handleNewNameChange}\r\n        numberValue={newNumber}\r\n        onNumberChange={handleNewNumberChange}\r\n      />\r\n\r\n      <People\r\n        people={personsToShow}\r\n        deletePerson={deletePerson}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}